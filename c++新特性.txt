[c++11 常使用新特性 gcc version >4.7]
auto : 用于初始化变量时推导出变量的类型;
decltype : 选择并返回表达式的类型，但不做运算；
nullptr: 解决原有的NULL等于0的二义性;
for循环： 支持迭代器+auto避免冗长的循环表达式，例如【for(auto &i:vector<xxx> ve){}】
shared_ptr: 多个智能指针可以共享同一个对象，对象的最末一个拥有着有责任销毁对象，并清理与该对象相关的所有资源
weak_ptr : 多个智能指针可以共享同一个对象，对象的最末一个拥有着有责任销毁对象，并清理与该对象相关的所有资源,weak_ptr
unique_ptr: 采用独占式拥有，可以确保一个对象和其相应的资源同一时间只被一个智能指针拥有，【在异常时可以帮助避免资源泄漏的智能指针】
atomic: 是一种原子操作，保证在多线程中在一时刻只有一个线程可以访问，实现无锁互斥，atomic_flag 可以实现线程之间的同步；
构造函数：构造函数可以被继承，也可委托构造；
=delete:是成员函数失效; 



